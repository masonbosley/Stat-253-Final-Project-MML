data = nba2021per36
)
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
View(nba2021per36)
nba2021per36 <- nba2021per36 %>%
mutate(Pos = stringr::str_replace(stringr::str_sub(Pos,1,2),"-",""))
nba2021per36 <- nba2021per36 %>%
mutate(Pos = as.factor(Pos))
data_fold <- vfold_cv(nba2021per36, v = 10)
data_rec <- recipe(Pos ~ FG +FGA + MP + PTS +STL + BLK + Age + ORB + DRB + AST + WS + X3P. + X2P., data = nba2021per36)
data_wf_tune <- workflow() %>%
add_model(tree_spec) %>%
add_recipe(data_rec)
param_grid <- grid_regular(cost_complexity(range = c(-5, -1)), levels = 10)
tune_res <- tune_grid(
data_wf_tune,
resamples = data_fold,
grid = param_grid,
metrics = metric_set(accuracy) #change this for regression trees
)
autoplot(tune_res) + theme_classic()
best_complexity <- select_by_one_std_err(tune_res, metric = 'accuracy', desc(cost_complexity))
best_complexity %>%
pull(cost_complexity)
data_wf_final <- finalize_workflow(data_wf_tune, best_complexity)
pos_final_fit <- fit(data_wf_final, data = nba2021per36)
tune_res %>%
collect_metrics() %>%
filter(cost_complexity == best_complexity %>% pull(cost_complexity))
tree_mod_lowcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .0001)),
data = nba2021per36
)
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .02)),
data = nba2021per36
)
# Plot all 3 trees in a row
#par(mfrow = c(1,3))
tree_mod_lowcp %>% extract_fit_engine() %>% rpart.plot()
pos_final_fit %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
nba2021per36 <- nba2021per36 %>%
mutate(Pos = stringr::str_replace(stringr::str_sub(Pos,1,2),"-",""))
nba2021per36 <- nba2021per36 %>%
mutate(Pos = as.factor(Pos))
data_fold <- vfold_cv(nba2021per36, v = 10)
data_rec <- recipe(Pos ~ FG +FGA + FT. + PTS +STL + BLK + ORB + DRB + AST + X3P. + X2P., data = nba2021per36)
data_wf_tune <- workflow() %>%
add_model(tree_spec) %>%
add_recipe(data_rec)
param_grid <- grid_regular(cost_complexity(range = c(-5, -1)), levels = 10)
tune_res <- tune_grid(
data_wf_tune,
resamples = data_fold,
grid = param_grid,
metrics = metric_set(accuracy) #change this for regression trees
)
autoplot(tune_res) + theme_classic()
best_complexity <- select_by_one_std_err(tune_res, metric = 'accuracy', desc(cost_complexity))
best_complexity %>%
pull(cost_complexity)
data_wf_final <- finalize_workflow(data_wf_tune, best_complexity)
pos_final_fit <- fit(data_wf_final, data = nba2021per36)
tune_res %>%
collect_metrics() %>%
filter(cost_complexity == best_complexity %>% pull(cost_complexity))
tree_mod_lowcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .0001)),
data = nba2021per36
)
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .02)),
data = nba2021per36
)
# Plot all 3 trees in a row
#par(mfrow = c(1,3))
tree_mod_lowcp %>% extract_fit_engine() %>% rpart.plot()
pos_final_fit %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .01)),
data = nba2021per36
)
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .015)),
data = nba2021per36
)
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
nba2021per36 <- nba2021per36 %>%
mutate(Pos = stringr::str_replace(stringr::str_sub(Pos,1,2),"-",""))
nba2021per36 <- nba2021per36 %>%
mutate(Pos = as.factor(Pos))
data_fold <- vfold_cv(nba2021per36, v = 10)
data_rec <- recipe(Pos ~ FG +FGA + FT. + PTS +STL + BLK + ORB + DRB + AST + X3P. + X2P. + TOV + Salary, data = nba2021per36)
data_wf_tune <- workflow() %>%
add_model(tree_spec) %>%
add_recipe(data_rec)
param_grid <- grid_regular(cost_complexity(range = c(-5, -1)), levels = 10)
tune_res <- tune_grid(
data_wf_tune,
resamples = data_fold,
grid = param_grid,
metrics = metric_set(accuracy) #change this for regression trees
)
autoplot(tune_res) + theme_classic()
best_complexity <- select_by_one_std_err(tune_res, metric = 'accuracy', desc(cost_complexity))
best_complexity %>%
pull(cost_complexity)
data_wf_final <- finalize_workflow(data_wf_tune, best_complexity)
pos_final_fit <- fit(data_wf_final, data = nba2021per36)
tune_res %>%
collect_metrics() %>%
filter(cost_complexity == best_complexity %>% pull(cost_complexity))
tree_mod_lowcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .0001)),
data = nba2021per36
)
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .015)),
data = nba2021per36
)
# Plot all 3 trees in a row
#par(mfrow = c(1,3))
tree_mod_lowcp %>% extract_fit_engine() %>% rpart.plot()
pos_final_fit %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .02)),
data = nba2021per36
)
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .018)),
data = nba2021per36
)
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
nba2021per36 <- nba2021per36 %>%
mutate(Pos = stringr::str_replace(stringr::str_sub(Pos,1,2),"-",""))
nba2021per36 <- nba2021per36 %>%
mutate(Pos = as.factor(Pos))
data_fold <- vfold_cv(nba2021per36, v = 10)
data_rec <- recipe(Pos ~ FG +FGA + FT. + PTS +STL + BLK + ORB + DRB + AST + X3P. + X2P. + TOV, data = nba2021per36)
data_wf_tune <- workflow() %>%
add_model(tree_spec) %>%
add_recipe(data_rec)
param_grid <- grid_regular(cost_complexity(range = c(-5, -1)), levels = 10)
tune_res <- tune_grid(
data_wf_tune,
resamples = data_fold,
grid = param_grid,
metrics = metric_set(accuracy) #change this for regression trees
)
autoplot(tune_res) + theme_classic()
best_complexity <- select_by_one_std_err(tune_res, metric = 'accuracy', desc(cost_complexity))
best_complexity %>%
pull(cost_complexity)
data_wf_final <- finalize_workflow(data_wf_tune, best_complexity)
pos_final_fit <- fit(data_wf_final, data = nba2021per36)
tune_res %>%
collect_metrics() %>%
filter(cost_complexity == best_complexity %>% pull(cost_complexity))
tree_mod_lowcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .0001)),
data = nba2021per36
)
tree_mod_highcp <- fit(
data_wf_tune %>%
update_model(tree_spec %>% set_args(cost_complexity = .018)),
data = nba2021per36
)
# Plot all 3 trees in a row
#par(mfrow = c(1,3))
tree_mod_lowcp %>% extract_fit_engine() %>% rpart.plot()
pos_final_fit %>% extract_fit_engine() %>% rpart.plot()
tree_mod_highcp %>% extract_fit_engine() %>% rpart.plot()
nba2021pergame %>%
ggplot(aes(x=Pos, y=Salary)) +
geom_point()
nba2021pergame <- nba2021pergame %>%
mutate(Pos = stringr::str_replace(stringr::str_sub(Pos,1,2),"-",""))
nba2021pergame %>%
ggplot(aes(x=Pos, y=Salary)) +
geom_point()
nba2021pergame %>%
ggplot(aes(x=Pos, y=Salary)) +
geom_boxplot()
nba2021per36 %>%
ggplot(aes(x=Pos, y=Salary)) +
geom_boxplot()
ggplot(nba2021per36, aes(x=`TRB`, y= `AST`)) +
geom_point()
nba2021per36 <- scale(nba2021per36)
nba2021per36_sub <- nba2021per36 %>%
select(STL, BLK, AST, TRB, FG., FT., X3PA)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k5 <- kmeans(scale(nba2021per36_sub), centers = 5)
# Display the cluter assignments
kclust_k5$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_5 = factor(kclust_k5$cluster))
ggplot(nba2021per36, aes(x=`BLK`, y= `AST`, color=kclust_5)) +
geom_point()
nba2021per36_sub <- nba2021per36 %>%
select(STL, BLK, AST, TRB, FG., FT., X3PA)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k5 <- kmeans(nba2021per36_sub, centers = 5)
# Display the cluter assignments
kclust_k5$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_5 = factor(kclust_k5$cluster))
ggplot(nba2021per36, aes(x=`BLK`, y= `AST`, color=kclust_5)) +
geom_point()
pca_out <- prcomp(nba2021per36, center = TRUE, scale = TRUE)
library(dplyr)
library(purrr)
library(ggplot2)
library(ISLR)
data(Khan)
# train_data contains 2308 gene expression measurements for 63 samples
train_data <- Khan %>% pluck('xtrain')
# Rename the variables to be gene1, gene2, etc.
colnames(train_data) <- paste0("gene", seq_len(ncol(train_data)))
# train_labels contains information on which of 4 cancer subtypes each sample comes from
train_labels <- Khan %>% pluck('ytrain')
View(Khan)
pca_out <- prcomp(train_data, center = TRUE, scale = TRUE)
head(pca_out$rotation[,4])
View(Khan)
View(nba2021pergame)
nba2021pergame %>%
ggplot(aes(x=Salary)) +
geom_density()
nba2021pergame %>%
ggplot(aes(x=Salary)) +
geom_histogram()
plot3d(nba2021per36$AST, nba2021per36$BLK, nba2021per36$ORB, col = nba2021per36$hclust_num3)
library(rgl)
plot3d(nba2021per36$AST, nba2021per36$BLK, nba2021per36$ORB, col = nba2021per36$hclust_num3)
nba2021per36 <- nba2021per36 %>%
mutate(
hclust_height4 = factor(cutree(hc_complete, h = 6)), # Cut at height (h) 3
hclust_num3 = factor(cutree(hc_complete, k = 5)) # Cut into 6 clusters (k)
)
nba2021pergame %>%
ggplot(aes(x=Pos, y=Salary)) +
geom_boxplot()
nba2021per36 %>%
ggplot(aes(x=Pos, y=Salary)) +
geom_boxplot()
nba2021pergame %>%
ggplot(aes(x=Salary)) +
geom_histogram()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(rpart.plot)
library(tidymodels)
tidymodels_prefer() # Resolves conflicts, prefers tidymodel functions
set.seed(123)
nba2021per36 <- read.csv("Per36-Player.csv")
nba2021_2022salaries <- read.csv("2021-2022-Player-Salaries.csv")
names(nba2021_2022salaries)[1] <- "Player"
nba2021per36 <- nba2021per36 %>% left_join(nba2021_2022salaries,by=c('Player')) %>%
select(-AllStar)  %>%
distinct(Player, .keep_all = TRUE) %>%
filter(!is.na(Salary)) %>%
filter(MP > 300) %>%
na.omit()
head(nba2021per36)
ggplot(nba2021per36, aes(x=`TRB`, y= `AST`)) +
geom_point()
nba2021per36_sub <- nba2021per36 %>%
select(STL, BLK, AST, TRB, FG., FT., X3PA)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k5 <- kmeans(nba2021per36_sub, centers = 5)
# Display the cluter assignments
kclust_k5$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_5 = factor(kclust_k5$cluster))
ggplot(nba2021per36, aes(x=`BLK`, y= `AST`, color=kclust_5)) +
geom_point()
set.seed(253)
kclust_k5_scale <- kmeans(scale(nba2021per36_sub), centers = 5)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_5_scale = factor(kclust_k5_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`BLK`, y= `AST`, color=kclust_5_scale)) +
geom_point()
nba2021per36_sub <- nba2021per36 %>%
select(STL, BLK, AST, TRB, FG., FT., X3PA)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub, centers = 3)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`BLK`, y= `FG.`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub), centers = 3)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`BLK`, y= `FG.`, color=kclust_3_scale)) +
geom_point()
# Random subsample of 50 penguins
set.seed(645)
#nba2021per36 <- nba2021per36 %>%
# slice_sample(n = 50)
# Select the variables to be used in clustering
nba2021per36_sub <- nba2021per36 %>%
select(BLK, AST, ORB)
# Summary statistics for the variables
summary(nba2021per36_sub)
# Compute a distance matrix on the scaled data
dist_mat_scaled <- dist(scale(nba2021per36_sub))
# The (scaled) distance matrix is the input to hclust()
# The method argument indicates the linkage type
hc_complete <- hclust(dist_mat_scaled, method = "complete")
hc_single <- hclust(dist_mat_scaled, method = "single")
hc_average <- hclust(dist_mat_scaled, method = "average")
hc_centroid <- hclust(dist_mat_scaled, method = "centroid")
# Plot dendrograms
plot(hc_complete)
plot(hc_single)
plot(hc_average)
plot(hc_centroid)
plot(hc_complete, labels = nba2021per36$Player)
nba2021per36 <- nba2021per36 %>%
mutate(
hclust_height4 = factor(cutree(hc_complete, h = 6)), # Cut at height (h) 3
hclust_num3 = factor(cutree(hc_complete, k = 5)) # Cut into 6 clusters (k)
)
nba2021per36 %>%
ggplot(aes(x=hclust_height4, color=AST,y=Pos, size=PF)) +
geom_point()
nba2021per36 %>%
ggplot(aes(x=hclust_num3, color=Pos,y=AST, size=ORB)) +
geom_point()
library(rgl)
plot3d(nba2021per36$AST, nba2021per36$BLK, nba2021per36$ORB, col = nba2021per36$hclust_num3)
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, WS)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 3)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`BLK`, y= `FG.`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 3)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`BLK`, y= `FG.`, color=kclust_3_scale)) +
geom_point()
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, WS)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 3)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`BLK`, y= `FG.`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 3)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3_scale)) +
geom_point()
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, WS)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 3)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 3)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3_scale)) +
geom_point()
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, WS)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 5)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 5)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3_scale)) +
geom_point()
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, PTS, AST, TRB)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 5)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 5)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3_scale)) +
geom_point()
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `PTS`, color=kclust_3_scale)) +
geom_point()
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, PTS, AST, TRB)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 5)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 5)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `PTS`, color=kclust_3_scale)) +
geom_point()
plot3d(nba2021per36$Salary, nba2021per36$PTS, nba2021per36$TRB, col = kclust_3_scale)
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, PTS, AST, TRB)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 5)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 5)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `PTS`, color=kclust_3_scale)) +
geom_point()
plot3d(nba2021per36$Salary, nba2021per36$PTS, nba2021per36$TRB, col = kclust_3_scale)
nba2021per36_sub2 <- nba2021per36 %>%
select(Salary, PTS, AST, TRB)
# Run k-means for k = centers = 3
set.seed(253)
kclust_k3 <- kmeans(nba2021per36_sub2, centers = 5)
# Display the cluter assignments
kclust_k3$cluster
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3 = factor(kclust_k3$cluster))
ggplot(nba2021per36, aes(x=`Salary`, y= `WS`, color=kclust_3)) +
geom_point()
set.seed(253)
kclust_k3_scale <- kmeans(scale(nba2021per36_sub2), centers = 5)
nba2021per36 <- nba2021per36 %>%
mutate(kclust_3_scale = factor(kclust_k3_scale$cluster))
# Visualize the new cluster assignments
ggplot(nba2021per36, aes(x=`Salary`, y= `PTS`, color=kclust_3_scale)) +
geom_point()
plot3d(nba2021per36$Salary, nba2021per36$PTS, nba2021per36$TRB, col = nba2021per36$kclust_3_scale)
plot3d(nba2021per36$Salary, nba2021per36$PTS, nba2021per36$TRB, col = nba2021per36$kclust_3_scale)
